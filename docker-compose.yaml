services:
  database:
    image: mysql:8-oracle
    env_file: ./common/config/user-config.env
    networks:
      kanmi_system:
        aliases:
          - sql.backend.acr
    volumes:
      - ./common/data/backup/:/backup/
      - ./base/backup.sh:/backup.sh:ro
      - ./base/base_v20.sql:/docker-entrypoint-initdb.d/setup.sql
      - db_data:/var/lib/mysql
    restart: unless-stopped
  mq:
    image: rabbitmq:3-management-alpine
    env_file: ./common/config/user-config.env
    volumes:
      - mq_data:/var/lib/rabbitmq/
    networks:
      kanmi_system:
        aliases:
          - mq.backend.acr
    restart: unless-stopped

  watchdog:
    build:
      context: ./kanmi-watchdog
    env_file:
      - ./common/config/user-config.env
    networks:
      kanmi_system:
        aliases:
          - watchdog.kanmi.acr
    volumes:
      - persistent_data:/across/watchdog/data
      - ./common/data/:/data/
      - ./common/config/user-config.json:/across/user-config.json:ro
      - ./common/config/watchdog.user-config.json:/across/watchdog.user-config.json:ro
      - ./common/config/compliance_v20.sql:/across/compliance_v20.sql:ro
    restart: on-failure
  intellidex:
    build:
      context: ./sequenzia-intellidex
    env_file:
      - ./common/config/user-config.env
    networks:
      kanmi_system:
        aliases:
          - idex.kanmi.acr
    volumes:
      - ./common/data/:/data/
      - ./common/config/user-config.json:/across/user-config.json:ro
    restart: on-failure
  authware:
    build:
      context: ./kanmi-discord-authware
    env_file:
      - ./common/config/user-config.env
      - ./common/config/setup-authware.env
    networks:
      kanmi_system:
        aliases:
          - authware.kanmi.acr
    volumes:
      - persistent_data:/across/sequenzia-framework/data
      - ./common/config/setup-authware.env:/across/setup-authware.env
      - ./common/config/user-config.json:/across/user-config.json:ro
    restart: on-failure
  framework:
    build:
      context: ./kanmi-discord-framework
    env_file: ./common/config/user-config.env
    networks:
      kanmi_system:
        aliases:
          - framework.kanmi.acr
    volumes:
      - persistent_data:/across/sequenzia-framework/data
      - ./common/config/user-config.json:/across/user-config.json:ro
    restart: on-failure
  fileworker:
    build:
      context: ./kanmi-discord-fileworker
    env_file: ./common/config/user-config.env
    networks:
      kanmi_system:
        aliases:
          - fileworker.kanmi.acr
    volumes:
      - persistent_data:/across/sequenzia-framework/data
      - ./common/config/user-config.json:/across/user-config.json:ro
      - ./common/data/:/data/
    restart: on-failure
  web:
    build:
      context: ./sequenzia-web
    env_file: ./common/config/user-config.env
    ports:
      - 3000:3000
    networks:
      kanmi_system:
        aliases:
          - sequenzia.acr
    volumes:
      - persistent_data:/across/sequenzia-web/data
      - ./common/config/user-config.json:/across/user-config.json:ro
      - ./common/data/:/data/
    restart: on-failure

networks:
  kanmi_system:
    ipam:
      driver: default
      config:
        - subnet: 192.168.85.0/24
    driver_opts:
      com.docker.networks.bridge.name: br-kanmi_system

volumes:
  db_data:
  mq_data:
  persistent_data:
